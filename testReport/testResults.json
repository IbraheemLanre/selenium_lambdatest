{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-22T18:42:03.089Z",
    "end": "2023-05-22T18:42:45.178Z",
    "duration": 42089,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dd6f49f4-d1f8-4975-8fac-5c3b7b8b8f31",
      "title": "",
      "fullFile": "C:\\Users\\HP129\\Desktop\\seleniumJS\\test\\paramTest.js",
      "file": "\\test\\paramTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f3ed895b-4270-4b22-aae2-4db3fb9fe1c8",
          "title": "Add todo text",
          "fullFile": "C:\\Users\\HP129\\Desktop\\seleniumJS\\test\\paramTest.js",
          "file": "\\test\\paramTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfully adds a todo for browser Chrome, 113.0, windows 11",
              "fullTitle": "Add todo text Successfully adds a todo for browser Chrome, 113.0, windows 11",
              "timedOut": null,
              "duration": 11757,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ltCapabilities.capabilities.platformName = os\n        ltCapabilities.capabilities.browserName = browser\n        ltCapabilities.capabilities.browserVersion = bVersion\n//        ltCapabilities.capabilities.name = this.test.title\n        \n        //launch the browser\n        driver = new Builder()\n        .usingServer(gridUrl)\n        .withCapabilities(ltCapabilities.capabilities)\n        .build()\n        //navigate to our application\n        await driver.get(todoEndPoint)\n  \n        // add a todo\n        await driver.findElement(By.id('sampletodotext')).sendKeys('Learn Selenium', Key.RETURN)\n    \n        //assert \n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n            return value\n        })\n    \n        //assert using chai should\n        todoText.should.equal(\"Learn Selenium\")\n        await driver.quit()",
              "err": {},
              "uuid": "c30aaf1e-d59a-42d1-bf90-e0f396caffa9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Successfully adds a todo for browser Firefox, 113.01, windows 11",
              "fullTitle": "Add todo text Successfully adds a todo for browser Firefox, 113.01, windows 11",
              "timedOut": null,
              "duration": 15949,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ltCapabilities.capabilities.platformName = os\n        ltCapabilities.capabilities.browserName = browser\n        ltCapabilities.capabilities.browserVersion = bVersion\n//        ltCapabilities.capabilities.name = this.test.title\n        \n        //launch the browser\n        driver = new Builder()\n        .usingServer(gridUrl)\n        .withCapabilities(ltCapabilities.capabilities)\n        .build()\n        //navigate to our application\n        await driver.get(todoEndPoint)\n  \n        // add a todo\n        await driver.findElement(By.id('sampletodotext')).sendKeys('Learn Selenium', Key.RETURN)\n    \n        //assert \n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n            return value\n        })\n    \n        //assert using chai should\n        todoText.should.equal(\"Learn Selenium\")\n        await driver.quit()",
              "err": {},
              "uuid": "65d11d94-5ccb-4c2c-a0e4-eba25b1e60c3",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Successfully adds a todo for browser Firefox, 112.0, windows 11",
              "fullTitle": "Add todo text Successfully adds a todo for browser Firefox, 112.0, windows 11",
              "timedOut": null,
              "duration": 13903,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ltCapabilities.capabilities.platformName = os\n        ltCapabilities.capabilities.browserName = browser\n        ltCapabilities.capabilities.browserVersion = bVersion\n//        ltCapabilities.capabilities.name = this.test.title\n        \n        //launch the browser\n        driver = new Builder()\n        .usingServer(gridUrl)\n        .withCapabilities(ltCapabilities.capabilities)\n        .build()\n        //navigate to our application\n        await driver.get(todoEndPoint)\n  \n        // add a todo\n        await driver.findElement(By.id('sampletodotext')).sendKeys('Learn Selenium', Key.RETURN)\n    \n        //assert \n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n            return value\n        })\n    \n        //assert using chai should\n        todoText.should.equal(\"Learn Selenium\")\n        await driver.quit()",
              "err": {},
              "uuid": "6de681ad-0038-4f22-8e37-d639705afc9d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c30aaf1e-d59a-42d1-bf90-e0f396caffa9",
            "65d11d94-5ccb-4c2c-a0e4-eba25b1e60c3",
            "6de681ad-0038-4f22-8e37-d639705afc9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41609,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReport",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}